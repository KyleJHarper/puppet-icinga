<%
  def zero_or_one(attribute, value)
    return if value.nil? or value == :undef
    value !~ /[01]/ or fail("The attribute '#{attribute}' must be 0 o 1, not '#{value}'.")
  end

  def one_of(attribute, value, allowed)
    return if value.nil? or value == :undef
    value =~ /[a-z](,[a-z])*/ or fail("The attribute '#{attribute}' must be a csv with no spaces, not '#{value}'.")
    value.split(',').each do |letter|
      allowed.include?(letter) or fail("The attribute '#{attribute}' does not allow the letter '#{letter}' found in value '#{value}'.")
    end
    if value.split(',').include?('n') and value.split(',').size > 1 ; then
      fail("Specifying 'n' overrides other flags in the attribute '#{attribute}', you provided '#{value}'.  While it works, it's obnoxious.")
    end
  end

  def is_a_float(attribute, value)
    return if value.nil? or value == :undef
    value !~ /^(([0-9]+([.][0-9]+)?)|([.][0-9]+))$/ or fail("The attribute '#{attribute}' must be an integer or float, not '#{value}'.")
  end

  def is_an_integer(attribute, value)
    return if value.nil? or value == :undef
    if value != :undef and value !~ /^[0-9]+$/ ; then
      fail("The attribute '#{attribute}' must be an integer, not '#{value}'.")
    end
  end

  def not_blank(attribute, value)
    if value.nil? then
      fail("The attribute '#{attribute}' cannot be blank, nil, or undef. Grr: '#{value}'")
    end
  end


  # -- Actual checks.  Could be DRY'd up but it'll make the defs even more complex to read.
  #
  #                                                                          \|/ Alphabetical by attribute
  zero_or_one('active_checks_enabled',        @active_checks_enabled)
  zero_or_one('check_freshness',              @check_freshness)
  is_a_float('check_interval',                @check_interval)
  zero_or_one('event_handler_enabled',        @event_handler_enabled)
  zero_or_one('failure_prediction_enabled',   @failure_prediction_enabled)
  is_a_float('first_notification_delay',      @first_notification_delay)
  zero_or_one('flap_detection_enabled',       @flap_detection_enabled)
  one_of('flap_detection_options',            @flap_detection_options, ['c','o','u','w'])
  is_an_integer('freshness_threshold',        @freshness_threshold)
  is_a_float('high_flap_threshold',           @high_flap_threshold)
  one_of('initial_state',                     @initial_state, ['c','o','u','w'])
  zero_or_one('is_volatile',                  @is_volatile)
  is_a_float('low_flap_threshold',            @low_flap_threshold)
  is_an_integer('max_check_attempts',         @max_check_attempts)
  is_a_float('notification_interval',         @notification_interval)
  one_of('notification_options',              @notification_options, ['c','f','n','r','s','u','w'])
  zero_or_one('notifications_enabled',        @notifications_enabled)
  zero_or_one('obsess_over_service',          @obsess_over_service)
  zero_or_one('passive_checks_enabled',       @passive_checks_enabled)
  zero_or_one('process_perf_data',            @process_perf_data)
  zero_or_one('retain_nonstatus_information', @retain_nonstatus_information)
  zero_or_one('retain_status_information',    @retain_status_information)
  is_a_float('retry_interval',                @retry_interval)
  not_blank('service_description',            @service_description)
  not_blank('servicegroups',                  @servicegroups)
  one_of('stalking_options',                  @stalking_options, ['c','n','o','u','w'])

-%>
